# templates/chrony.conf.j2

# see doc at https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/ch-configuring_ntp_using_the_chrony_suite
# also: https://wiki.archlinux.org/title/Chrony
# https://man.archlinux.org/man/chrony.conf.5

# Allow NTP client access from local network
allow 192.168.0.0/16
allow 172.16.0.0/12
allow fe80::/10
allow fd00::/8

# Allow NTP client access from localhost
allow 127.0.0.1
allow ::1

# Listen for NTP client requests on all network interfaces
bindaddress 0.0.0.0
bindaddress ::

bindcmdaddress 127.0.0.1
bindcmdaddress ::1

# Enable Chrony monitoring from localhost
# e.g. use with chronyc tracking or chronyc sourcestats
# cmdallow 127.0.0.1


# External NTP servers
# see https://github.com/jauderho/nts-servers for list of public nts enabled NTP servers
# setting offline means the syncing should be started via "chronyc online" via script or manually

# Swiss NTS, mostly private
server time.cloudflare.com iburst nts maxdelay 0.012
server ntp.trifence.ch iburst nts maxdelay 0.012
server ntp.zeitgitter.net iburst nts maxdelay 0.012
server ntp.3eck.net iburst nts maxdelay 0.012 
# Stratum 1 but very bad stddev (worst off all servers), apparently behind dsl line
# server time.signorini.ch iburst nts maxdelay 0.012 maxdelayquant 0.9 


#Germany, NTS, Physikalisch Technische Bundesanstalt (DE legal time)
server ptbtime1.ptb.de iburst nts maxdelay 0.025 require trust
server ptbtime2.ptb.de iburst nts maxdelay 0.025 require trust
server ptbtime3.ptb.de iburst nts maxdelay 0.025 require trust
server ptbtime4.ptb.de iburst nts maxdelay 0.025 require trust
#pbttime4 bans on xleave due to rate

# France, NTS, private
# server time.system76.com iburst nts offline


# Switzerland, unencrypted, (CH legal time... apparently much largetr jitter than other servers in this list here)
#server ntp11.metas.ch iburst offline
#server ntp12.metas.ch iburst offline
# server ntp13.metas.ch iburst offline

# Switzerland Solnet unencrypted, but in peer network, let's see if we would get banned by perm bursting them
# -> minpoll 4 --> 2‚Å¥s == 16s
server time1.ethz.ch iburst minpoll 2 polltarget 10 maxdelay 0.003
server time2.ethz.ch iburst minpoll 2 polltarget 10 maxdelay 0.003
server ntp1.solnet.ch burst minpoll 1 polltarget 10 maxdelay 0.003
#server ntp2.solnet.ch burst minpoll 4 polltarget 20 maxdelay 0.003 maxdelayquant 0.5 offline 
#server ntp3.solnet.ch burst minpoll 4 polltarget 20 maxdelay 0.003 maxdelayquant 0.5 offline

pool ch.pool.ntp.org iburst maxdelay 0.010 minpoll 5 maxpoll 9 maxsources 5


# server tick.zg.ch iburst offline
#server time.signorini.ch iburst nts # Stratum 1

# TODO add peers here, syntax is simlar to server... config must be symmetrical between two involved services

# server tick.zg.ch iburst offline weight 4
# server 0.ch.pool.ntp.orgtime.example.com iburst
# server 1.ch.pool.ntp.orgtime.example.com iburst
# server 2.ch.pool.ntp.orgtime.example.com iburst
# server 3.ch.pool.ntp.orgtime.example.com iburst


# hard shift clock when the clock is off by more than 300 ms when detected during the first 10 updates
#initstepslew 0.3 ntp1.solnet.ch ntp2.solnet.ch ntp3.solnet.ch time.ethz.ch 1.ch.pool.ntp.org 2.ch.pool.ntp.org 3.ch.pool.ntp.org time.windows.com time.apple.com time.google.com

# never use servers with offset, defaults to 3s
maxdistance 1
maxjitter 0.5

# use at least three sources when adjusting the clock
minsources 1
combinelimit 5

#make sure this dir exists (created by default on debian 12)
keyfile    /var/lib/chrony/chrony.keys
logdir /var/log/chrony
log measurements statistics tracking

# HW clock time in UTC
rtconutc
# Enable kernel synchronization of the real-time clock (RTC).
# rtcsync
# WARNING: consider disabling rtcsync / rtcautotrim when running in a VM/container on shared server
# set rtc when off by 500ms or more
# also check the behaviour of hwclock on your system... nothing else should modify the hardware clock
rtcautotrim 0.5

# max drift in ppm, expected from HW clock (reasonably good and stabilized TCXO / crystal or even MEMS clocks are usually not worse than 5ppm)
# (e.g. temperature compensated DS3231 are reported to have a drift of ~0.1ppm, but requires GPIO I2C pins and a custom kernel driver)
maxclockerror 5
maxupdateskew 50

# immeadeatly adjust time on leapseconds
leapsectz  right/UTC
# adjusts to leapseconds over 12s (on Linux, see maxslewrate in chrony.conf manpage to adjust)
# leapsecmode slew
# maxslewrate 1000
# smoothtime 400 0.001024 leaponly

# Setting sched_priority enabled use real time FIFO scheduler for this daemon(if available), priority must be between 0-100
sched_priority 50

# Never let the daemon be paged out (reduces latency)
lock_all


# write RTC offset to file on shutdown for faster recovery on restart
# note this can also be achieved by running chronyc dump from an external script 
dumponexit
dumpdir /var/lib/chrony
rtcfile /var/lib/chrony/rtc
driftfile /var/lib/chrony/drift


# Enable Hwtimestamping on NICs that support the feature (verify with ethtool -T <interface>)
# supported on Intel X710, I225 (this directive wont do harm on adapters without support
hwtimestamp *

# Specify the local NTP server mode
local stratum 3
